<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Repository and @Service -->
    <context:component-scan base-package="com.coupondunia.*"/>

    <!-- Enable @Transactional support -->
    <tx:annotation-driven/>

    <!-- This bean has been referred fron struts.xml file; So type it correctly; -->
    <!-- Make scope prototype; This is really important. -->
    <bean name="userAction" class="com.coupondunia.controller.UserAction" scope="prototype"/>
    <bean name="playerAction" class="com.coupondunia.controller.PlayerAction" scope="prototype"/>

    <!-- These beans are injected automatically by spring context -->

    <bean id="baseLookup" class="com.coupondunia.bo.lookups.AbstractItemLookup" abstract="true" lazy-init="false"/>

    <bean id="masterResource" class="com.coupondunia.bo.lookups.GenericSystemResource">
        <constructor-arg value="masterResource"/>
    </bean>

    <bean id="teamCompositionLookup" class="com.coupondunia.bo.lookups.TeamCompositionLookup" parent="baseLookup">
        <constructor-arg ref="masterResource"/>
        <constructor-arg value="teamCompositionLookup"/>
        <property name="teamCompositionDao" ref="teamCompositionDao"/>
    </bean>

    <bean id="cricketPlayerLookup" class="com.coupondunia.bo.lookups.CricketPlayerLookup" parent="baseLookup">
        <constructor-arg ref="masterResource"/>
        <constructor-arg value="cricketPlayerLookup"/>
        <property name="cricketPlayerDao" ref="cricketPlayerDao"/>
    </bean>

    <bean id="cricketPlayerDao" class="com.coupondunia.dao.CricketPlayerDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="teamCompositionDao" class="com.coupondunia.dao.GenericDaoHibernate">
        <constructor-arg value="com.coupondunia.entity.TeamComposition"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="cricketPlayerManager" class="com.coupondunia.service.CricketPlayerManagerImpl">
        <constructor-arg ref="cricketPlayerDao"/>
    </bean>

    <bean id="teamDao" class="com.coupondunia.dao.GenericDaoHibernate">
        <constructor-arg value="com.coupondunia.entity.Team"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="teamManager" class="com.coupondunia.service.GenericManagerImpl">
        <constructor-arg ref="teamDao"/>
    </bean>

    <bean id="teamCricketPlayerDao" class="com.coupondunia.dao.GenericDaoHibernate">
        <constructor-arg value="com.coupondunia.entity.TeamCricketPlayer"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="teamCricketPlayerManager" class="com.coupondunia.service.GenericManagerImpl">
        <constructor-arg ref="teamCricketPlayerDao"/>
    </bean>

    <bean id="userDao" class="com.coupondunia.dao.UserDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userManager" class="com.coupondunia.service.UserManagerImpl">
        <constructor-arg ref="userDao"/>
    </bean>

    <!-- Configure jdbc.properties -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/jdbc.properties" />
 
    <!-- Data Source configuration -->
    <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />
 
	<!-- Configure hibernate session factory -->    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    <!-- Run SQL queries in transactions -->
    <tx:annotation-driven />
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
</beans>